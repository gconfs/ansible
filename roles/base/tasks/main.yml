---
- name: create sudo group
  group:
      name: sudo
      state: present

- name: create group wxcafe
  group:
      name: wxcafe
      state: present

- name: create user wxcafe
  user:
    name: wxcafe
    comment: "Wxcafe"
    groups: wheel,wxcafe,sudo

- name: create ~wxcafe/.ssh folder
  file:
      path: /home/wxcafe/.ssh/
      state: directory
      owner: wxcafe
      group: wxcafe
      mode: 0755

- name: copy ssh pubkey for wxcafe
  copy:
    src: etc/ssh/wxcafe_authorized_keys
    dest: /home/wxcafe/.ssh/authorized_keys
    owner: wxcafe
    group: wxcafe
    mode: 0600

- name: create group multun
  group:
      name: multun
      state: present

- name: create user multun
  user:
    name: multun
    comment: "multun"
    groups: wheel,multun,sudo

- name: create ~multun/.ssh folder
  file:
      path: /home/multun/.ssh/
      state: directory
      owner: multun
      group: multun
      mode: 0755

- name: copy ssh pubkey for multun
  copy:
    src: etc/ssh/multun_authorized_keys
    dest: /home/multun/.ssh/authorized_keys
    owner: multun
    group: multun
    mode: 0600

- name: create group shepard
  group:
      name: shepard
      state: present

- name: create user shepard
  user:
    name: shepard
    comment: "shepard"
    groups: wheel,shepard,sudo

- name: create ~shepard/.ssh folder
  file:
      path: /home/shepard/.ssh/
      state: directory
      owner: shepard
      group: shepard
      mode: 0755

- name: copy ssh pubkey for shepard
  copy:
    src: etc/ssh/shepard_authorized_keys
    dest: /home/shepard/.ssh/authorized_keys
    owner: shepard
    group: shepard
    mode: 0600

- name: create group bruce
  group:
      name: bruce
      state: present

- name: create user bruce
  user:
    name: bruce
    comment: "bruce"
    groups: wheel,bruce,sudo

- name: create ~bruce/.ssh folder
  file:
      path: /home/bruce/.ssh/
      state: directory
      owner: bruce
      group: bruce
      mode: 0755

- name: copy ssh pubkey for bruce
  copy:
    src: etc/ssh/bruce_authorized_keys
    dest: /home/bruce/.ssh/authorized_keys
    owner: bruce
    group: bruce
    mode: 0600

- name: create group sunbro
  group:
      name: sunbro
      state: present

- name: create user sunbro
  user:
    name: sunbro
    comment: "sunbro"
    groups: wheel,sunbro,sudo

- name: create ~sunbro/.ssh folder
  file:
      path: /home/sunbro/.ssh
      state: directory
      owner: sunbro
      group: sunbro
      mode: 0755

- name: copy ssh pubkey for sunbro
  copy:
    src: etc/ssh/sunbro_authorized_keys
    dest: /home/sunbro/.ssh/authorized_keys
    owner: sunbro
    group: sunbro
    mode: 0600

- name: create group prydatar
  group:
      name: prydatar
      state: present

- name: create user prydatar
  user:
    name: prydatar
    comment: "prydatar"
    groups: wheel,prydatar,sudo

- name: create ~prydatar/.ssh folder
  file:
      path: /home/prydatar/.ssh/
      state: directory
      owner: prydatar
      group: prydatar
      mode: 0755

- name: copy ssh pubkey for prydatar
  copy:
    src: etc/ssh/prydatar_authorized_keys
    dest: /home/prydatar/.ssh/authorized_keys
    owner: prydatar
    group: prydatar
    mode: 0600

- name: install packages
  package:
    name: vim,zsh,git,sudo,grc,nmap,mtr,snmpd,ansible,letsencrypt
    state: present

- name: install snmpd configuration
  copy:
      src: etc/snmp/snmpd.conf
      dest: /etc/snmp/snmpd.conf
      owner: root
      group: root
      mode: 0400

- name: restart snmpd
  service:
    name: snmpd
    state: restarted

- name: install sudo config
  copy:
    src: etc/sudo/sudoers
    dest: /etc/sudoers
    owner: root
    group: wheel
    mode: 0440

- name: update sshd_config
  copy:
    src: etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: wheel
    mode: 0644

- name: reload sshd
  service:
    name: sshd
    state: reloaded

- name: backup existing nginx config
  command: mv /etc/nginx/sites-enabled /tmp/nginx-sites-enabled
  args:
    creates: /tmp/nginx-sites-enabled
    removes: /etc/nginx/sites-enabled

- name: create sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled/
    state: directory

- name: install base nginx configuration
  copy:
    src: etc/nginx/nginx.conf
    dest: /etc/nginx/sites-enabled/default

- name: reload nginx
  service:
    name: nginx
    state: reloaded

- name: create certbot systemd service file
  template:
    src: templates/certbot.service
    dest: /lib/systemd/system/certbot.service

- name: create certbot timer timer file
  template:
    src: templates/certbot.timer
    dest: /lib/systemd/system/certbot.timer

- name: enable certbot service
  systemd:
    name: certbot.service
    enabled: yes

- name: enable certbot timer
  systemd:
    name: certbot.timer
    enabled: yes

- name: clear nginx configuration
  file:
    path: /etc/nginx/sites-enabled
    state: absent

- name: reinstall existing nginx config
  command: mv /tmp/nginx-sites-enabled /etc/nginx/sites-enabled
  args:
    creates: /etc/nginx/sites-enabled
    removes: /tmp/nginx-sites-enabled

- name: re-reload nginx
  service:
    name: nginx
    state: reloaded
# vim: set et st=2 sts=2 sw=2 ts=2:
