---
- name: Remove node package, in lieu of nvm
  apt:
    name: ["nodejs", "node"]
    state: absent
  become: true

- name: Install required system packages
  apt:
    name: ["build-essential", "git", "openssl", "libssl-dev", "curl",  "postgresql", "python3-psycopg2"]
    state: present
  become: true

- name: create outline system group
  group:
    name: '{{ outline_system_group }}'
    system: true

- name: create outline system user
  user:
    name: '{{ outline_system_user }}'
    system: true
    shell: '/bin/bash'
    group: '{{ outline_system_group }}'
    createhome: false
    home: '/var/lib/{{ outline_system_user }}'

- name: download nvm
  get_url:
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh
    owner: '{{ outline_system_user }}'
    group: '{{ outline_system_group }}'
    dest: '/var/lib/{{ outline_system_user }}'
    mode: 'u=rwx,g=rx,o=rx'

- name: install nvm
  become: yes
  become_user: '{{ outline_system_user }}'
  command: '/var/lib/{{ outline_system_user }}/install.sh'

- name: install node and set version
  become: yes
  become_user: '{{ outline_system_user }}'
  shell: "source /var/lib/{{ outline_system_user }}/.nvm/nvm.sh && nvm install 22"
  args:
    executable: /bin/bash

- name: enable and start postgresql service
  service:
    name: 'postgresql.service'
    state: started
    enabled: yes

- name: create database for outline
  become: true
  become_user: postgres
  postgresql_db:
    name: '{{ outline_postgres_db }}'

- name: create user for outline
  become: true
  become_user: postgres
  postgresql_user:
    db: '{{ outline_postgres_db }}'
    name: '{{ outline_postgres_user }}'
    password: '{{ outline_postgres_password }}'
  no_log: yes

- name: enable and start redis service
  service:
    name: 'redis.service'
    state: started
    enabled: yes

- name: create outline home
  file:
    path: '/srv/outline'
    state: directory
    owner: '{{ outline_system_user }}'
    group: '{{ outline_system_group }}'
    mode: 0775

- name: install outline
  become: yes
  become_user: '{{ outline_system_user }}'
  git:
    repo: https://github.com/outline/outline.git
    dest: '/srv/outline'
    version: v0.86.1
    force: yes

- name: yarn install
  become: yes
  become_user: '{{ outline_system_user }}'
  shell: npm install --legacy-peer-deps
  args:
    chdir: '/srv/outline'

- name: create systemd service
  template:
    src: 'outline.service'
    dest: '/etc/systemd/system/outline.service'
  notify: service modified

- name: copy env file
  template:
    src: 'env'
    dest: '/srv/outline/.env'
    owner: '{{ outline_system_user }}'
    group: '{{ outline_system_group }}'

- name: yarn build frontend
  become: yes
  become_user: '{{ outline_system_user }}'
  shell: npm run build
  args:
    chdir: '/srv/outline'

- name: yarn sequelize:migrate
  become: yes
  become_user: '{{ outline_system_user }}'
  shell: yarn sequelize:migrate
  args:
    chdir: '/srv/outline'
  notify: service modified

- name: enable and start outline service
  service:
    name: 'outline.service'
    state: started
    enabled: true

# vim: set et st=2 sts=2 sw=2 ts=2:
