- name: install packages
  package:
      name: nginx,python3-pip,python3-venv,uwsgi,uwsgi-plugin-python3,default-libmysqlclient-dev
      state: present

- name: install nginx vhost for django website
  copy:
    src: etc/nginx.conf
    dest: /etc/nginx/sites-enabled/website

- name: create nginx log directory
  file:
      path: /var/log/nginx/website
      state: directory

- name: mysql config
  shell: mysql -f -e 'create database website character set utf8; create user website; grant all on website.* to "website"@"localhost" identified by "{{ website_mysql_pass }}"; flush privileges;'
  args:
    creates: /opt/ansible/mysql_website_configured

- name: git clone gconfs django website
  git:
    repo: 'https://github.com/gconfs/website'
    dest: /srv/website/

- name: install uwsgi configuration
  copy:
    src: etc/website.ini
    dest: /etc/uwsgi/apps-enabled/

- name: install python packages
  pip:
    requirements: /srv/website/requirements.txt
    virtualenv_python: python3
    virtualenv: /srv/website/venv

- name: run local settings template
  template:
    src: local_settings.py
    dest: /srv/website/gconfs/local_settings.py

- name: django collectstatic
  django_manage: 
    command: collectstatic
    virtualenv: /srv/website/venv
    app_path: /srv/website

- name: django migrate
  django_manage: 
    command: migrate
    virtualenv: /srv/website/venv
    app_path: /srv/website

- name: django runcrons
  django_manage: 
    command: runcrons
    virtualenv: /srv/website/venv
    app_path: /srv/website

- name: set cron job
  cron:
    name: "fetch latest youtube videos"
    special_time: daily
    job: "cd /srv/website/ && /srv/website/venv/bin/python /srv/website/manage.py runcrons"

- name: enable uwsgi service
  service:
    name: uwsgi
    enabled: yes
    state: restarted

- name: enable nginx service
  service:
    name: nginx
    enabled: yes
    state: restarted
